{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","pages/LoginPage.js","adapters/api-planilha.js","pages/SelecaoPage.js","pages/ListaVacinadosPage.js","pages/VacinarPage.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","buttonProgress","color","position","top","left","marginLeft","wrapper","LoginPage","classes","history","useHistory","React","useState","loading","setLoading","AppBar","Toolbar","Typography","variant","className","title","Container","CssBaseline","noValidate","onSubmit","e","preventDefault","user","target","elements","value","password","params","URLSearchParams","append","fetch","method","redirect","body","response","json","console","log","push","login","grupos","data","vacinas","lotes","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","disabled","CircularProgress","size","stepper","bottom","buttons","right","formControl","minWidth","buttonConfirmar","SelecaoPage","props","activeStep","setActiveStep","steps","grupo","setGrupo","vacina","setVacina","lote","setLote","state","stepSelects","handleChangeGrupo","event","handleChangeVacina","handleChangeLote","length","centerDiv","onClick","style","textAlign","step","FormControl","InputLabel","Select","labelId","onChange","map","grupoItem","MenuItem","vacinaItem","loteItem","getStepContent","prevStep","Stepper","index","Step","StepLabel","card","buttonDiv","buttonAdd","ListaVacinadosPage","Card","CardContent","Divider","List","dense","vacinado","ListItem","button","divider","ListItemText","primary","nome","secondary","cpf","divCenter","tfCpf","pacienteDiv","paddingLeft","backgroundColor","palette","background","border","boxShadow","shadows","padding","VacinarPage","visibility","setVisibility","error","setError","setCpf","setNome","dn","setDn","sexo","setSexo","dose1","setDose1","dose2","setDose2","time","Date","open","setOpen","modalDose","setModalDose","loadingModal","setLoadingModal","handleOpen","handleClose","transform","toLocaleDateString","success","alert","paciente","helperText","startIcon","Modal","onClose","aria-labelledby","aria-describedby","Routes","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.170f1b7a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getURL } from '../adapters/api-planilha';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    buttonProgress: {\r\n        color: 'blue',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    function doLogin(e) {\r\n        e.preventDefault();\r\n        const user = e.target.elements.user.value;\r\n        const password = e.target.elements.password.value;\r\n        if(!loading) {\r\n            setLoading(true);\r\n            const params = new URLSearchParams();\r\n            params.append('login', user);\r\n            params.append('password', password);\r\n            params.append('type', 'doLogin');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                setLoading(false);\r\n                history.push('/selecao', {login: user, grupos: json.data.grupos, vacinas: json.data.vacinas, lotes: json.data.lotes});\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Vacinas\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                <CssBaseline />\r\n\r\n                <form className={classes.form} noValidate onSubmit={doLogin}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"Usuário\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <div className={classes.wrapper}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            Entrar\r\n                        </Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","\r\nexport const getGrupos = () => {\r\n    return ['Trabalhadores de Saúde', 'Pessoas de 80 anos ou mais']\r\n}\r\n\r\nexport const getVacinas = () => {\r\n    return ['Coronavac', 'Pfizer', 'Oxford']\r\n}\r\n\r\nexport const getLotes = () => {\r\n    return ['45604654', '70546Z5646', '4654546']\r\n}\r\n\r\nexport const getVacinados = () => {\r\n    return [\r\n        {nome: 'João da Silva', cpf: '12312512412'},\r\n        {nome: 'Pedro dos Santos', cpf:'64525625655'},\r\n        {nome: 'Maria da Silva', cpf: '21412421487'}\r\n    ]\r\n}\r\n\r\nexport const getCpf = () => {\r\n    return []\r\n}\r\n\r\nexport const getURL = () => {\r\n    return 'https://script.google.com/macros/s/AKfycbxkQf1wEUKHZoB6kbYA_YPHOioUhUAPiW2ctj83G83iNhuvTT9eig_-R38xZkui8Fk_OA/exec'\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getGrupos, getVacinas, getLotes } from '../adapters/api-planilha';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepper: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%'\r\n  },\r\n  buttons: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    right: 20\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  buttonConfirmar: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    left: '50%',\r\n    width: 120,\r\n    'margin-left': '-60px'\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction SelecaoPage(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = ['Selecione o grupo', 'Selecione a vacina', 'Selecione o lote'];\r\n  const [grupo, setGrupo] = React.useState('');\r\n  const [vacina, setVacina] = React.useState('');\r\n  const [lote, setLote] = React.useState('');\r\n  console.log(props.location.state)\r\n  const login = props.location.state.login;\r\n  const grupos = props.location.state.grupos;\r\n  const vacinas = props.location.state.vacinas;\r\n  const lotes = props.location.state.lotes;\r\n  const stepSelects = [grupo, vacina, lote];\r\n  const history = useHistory();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep)=>prevStep+1);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep)=>prevStep+-1);\r\n  }\r\n\r\n  const handleChangeGrupo = (event) => {\r\n    setGrupo(event.target.value);\r\n  };\r\n\r\n  const handleChangeVacina = (event) => {\r\n    setVacina(event.target.value);\r\n  };\r\n\r\n  const handleChangeLote = (event) => {\r\n    setLote(event.target.value);\r\n  };\r\n\r\n  const handleConfirmation = (event) => {\r\n    history.push('/listavacinados', {login: login, grupo: grupo, vacina: vacina, lote: lote});\r\n\r\n  }\r\n\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"grupo-select-label\">Grupo</InputLabel>\r\n              <Select\r\n                labelId=\"grupo-select-label\"\r\n                id=\"grupo-select\"\r\n                value={grupo}\r\n                onChange={handleChangeGrupo}\r\n              >\r\n                {grupos.map((grupoItem)=>{\r\n                  return <MenuItem key={grupoItem} value={grupoItem}>{grupoItem}</MenuItem>\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n        );\r\n      case 1:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"vacina-select-label\">Vacina</InputLabel>\r\n          <Select\r\n            labelId=\"vacina-select-label\"\r\n            id=\"vacina-select\"\r\n            value={vacina}\r\n            onChange={handleChangeVacina}\r\n          >\r\n            {vacinas.map((vacinaItem)=>{\r\n              return <MenuItem key={vacinaItem} value={vacinaItem}>{vacinaItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      case 2:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"lote-select-label\">Lote</InputLabel>\r\n          <Select\r\n            labelId=\"lote-select-label\"\r\n            id=\"lote-select\"\r\n            value={lote}\r\n            onChange={handleChangeLote}\r\n          >\r\n            {lotes.map((loteItem)=>{\r\n              return <MenuItem key={loteItem} value={loteItem}>{loteItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <CssBaseline />\r\n          <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Vacinas\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n        {activeStep === steps.length ? (\r\n          <Container>\r\n            <p>Grupo: {grupo}</p>\r\n            <p>Vacina: {vacina}</p>\r\n            <p>Lote: {lote}</p>\r\n            <div className={classes.centerDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonConfirmar}\r\n                onClick={handleConfirmation}\r\n              >Confirmar</Button>\r\n            </div>\r\n          </Container>\r\n        ) : (\r\n          <div>\r\n            <div style={{textAlign: \"center\"}}>{getStepContent(activeStep)}</div>\r\n            <div className={classes.buttons}>\r\n              <Button disabled={activeStep === 0} onClick={handleBack}>\r\n                Voltar\r\n              </Button>\r\n              <Button\r\n                disabled={stepSelects[activeStep]===''}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n              >\r\n                Próximo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      \r\n      <div className={classes.stepper}>\r\n        <Stepper activeStep={activeStep}>\r\n          {steps.map((label, index) => {\r\n            const stepProps = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelecaoPage;","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, Card, CardContent, Container, Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { getVacinados } from '../adapters/api-planilha';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: '20px'\r\n    },\r\n    buttonDiv: {\r\n        position: 'fixed',\r\n        bottom: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    buttonAdd: {\r\n        width: '100px'\r\n    }\r\n}));\r\n\r\nfunction ListaVacinadosPage(props) {\r\n    const classes = useStyles();\r\n    const login = props.location.state.login;\r\n    const grupo = props.location.state.grupo;\r\n    const vacina = props.location.state.vacina;\r\n    const lote = props.location.state.lote;\r\n    const vacinados = [];\r\n    const history = useHistory();\r\n\r\n    const handleAdd = () => {\r\n        history.push('/vacinar', {login: login, grupo: grupo, vacina: vacina, lote: lote})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                        Vacinas\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <p>Grupo: {grupo}</p>\r\n                        <p>Vacina: {vacina}</p>\r\n                        <p>Lote: {lote}</p>\r\n                    </CardContent>\r\n                </Card>\r\n                <Divider variant=\"middle\" />\r\n                <Typography variant=\"h6\">Registros de vacinaçao</Typography>\r\n                <List dense>\r\n                    {vacinados.map((vacinado) => {\r\n                        return (\r\n                            <ListItem key={vacinado.cpf} button divider>\r\n                                <ListItemText\r\n                                    primary={vacinado.nome}\r\n                                    secondary={vacinado.cpf}\r\n                                />\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    \r\n                </List>\r\n                <div className={classes.buttonDiv}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonAdd}\r\n                        onClick={handleAdd}\r\n                        >Adicionar\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaVacinadosPage;","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, CircularProgress, Divider,Modal, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getURL } from '../adapters/api-planilha';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divCenter: {\r\n        width: '100%',\r\n        textAlign: 'center'\r\n    },\r\n    tfCpf: {\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        marginTop: '20px'\r\n    },\r\n    pacienteDiv: {\r\n        paddingLeft: '20px'\r\n    },\r\n    buttonProgress: {\r\n        color: 'blue',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n\r\n      },\r\n}));\r\n\r\nfunction VacinarPage(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [visibility, setVisibility] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [cpf, setCpf] = React.useState();\r\n    const [nome, setNome] = React.useState();\r\n    const [dn, setDn] = React.useState();\r\n    const [sexo, setSexo] = React.useState();\r\n    const [dose1, setDose1] = React.useState();\r\n    const [dose2, setDose2] = React.useState();\r\n    const time = new Date();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [modalDose, setModalDose] = React.useState('');\r\n    const [loadingModal, setLoadingModal] = React.useState(false);\r\n    const styles = { \r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    };\r\n\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        const cpf = e.target.elements.cpf.value;\r\n        if(!loading) {\r\n            setLoading(true);\r\n            setError(false);\r\n            const params = new URLSearchParams();\r\n            params.append('cpf', cpf);\r\n            params.append('type', 'getPaciente');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                if(json.success){\r\n                    setCpf(json.paciente[0]);\r\n                    setNome(json.paciente[1]);\r\n                    setDn(json.paciente[2]);\r\n                    setSexo(json.paciente[3]);\r\n                    setDose1(json.dose1[0]);\r\n                    setDose2(json.dose2[0]);\r\n                    setVisibility(true);\r\n                }else{\r\n                    setError(true);\r\n                }\r\n                setLoading(false);\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    const handleCadastro = () => {\r\n        if(!loadingModal){\r\n            setLoadingModal(true);\r\n            const params = new URLSearchParams();\r\n            params.append('login', props.location.state.login);\r\n            params.append('cpf', cpf);\r\n            params.append('time', time);\r\n            params.append('grupo', props.location.state.grupo);\r\n            params.append('vacina', props.location.state.vacina);\r\n            params.append('lote', props.location.state.lote);\r\n            params.append('dose', modalDose);\r\n            params.append('type', 'setVacinacao');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                if(json.success){\r\n                    if(modalDose===1) {\r\n                        setDose1([props.location.state.login, cpf, time, props.location.state.grupo, props.location.state.vacina, props.location.state.lote]);\r\n                    } else if(modalDose === 2) {\r\n                        setDose2([props.location.state.login, cpf, time, props.location.state.grupo, props.location.state.vacina, props.location.state.lote]);\r\n                    }\r\n                    handleClose();\r\n                }else{\r\n                    alert('Erro no cadastro')\r\n                }\r\n                setLoadingModal(false);\r\n                setLoading(false);\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleDose1 = () => {\r\n        setModalDose(1);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleDose2 = () => {\r\n        setModalDose(2);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    const body = (\r\n        <div style={styles} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Cadastrar {modalDose}ª dose</h2>\r\n          <div id=\"simple-modal-description\">\r\n            <p>Grupo: {props.location.state.grupo}</p>\r\n            <p>Vacina: {props.location.state.vacina}</p>\r\n            <p>Lote: {props.location.state.lote}</p>\r\n            <p>Data: {time.toLocaleDateString()}</p>\r\n            <div className={classes.divCenter}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={loadingModal}\r\n                        onClick={handleCadastro}>Confirmar</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                        Vacinas\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.divCenter}>\r\n                    <Typography variant=\"h6\">Buscar paciente</Typography>\r\n                    <form onSubmit={handleSearch}>\r\n                        <TextField className={classes.tfCpf} id=\"cpf\" label=\"CPF\" name=\"cpf\" error={error} helperText={error ? \"CPF não encontrado.\": \"\"} />\r\n                        <div className={classes.wrapper}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SearchIcon />}\r\n                            disabled={loading}\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {visibility ? <div className={classes.pacienteDiv}>\r\n                    <Typography variant=\"subtitle1\">Nome: {nome}</Typography>\r\n                    <Typography variant=\"subtitle1\">Data de nascimento: {dn}</Typography>\r\n                    <Typography variant=\"subtitle1\">Sexo: {sexo}</Typography>\r\n                    <Divider/>\r\n                    <Typography variant=\"h6\">1ª Dose</Typography>\r\n                    {dose1 ? \r\n                        <div>\r\n                            <Typography variant=\"subtitle1\">Data: {new Date(dose1[2]).toLocaleDateString()}</Typography>\r\n                            <Typography variant=\"subtitle1\">Grupo: {dose1[3]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Vacina: {dose1[4]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Lote: {dose1[5]}</Typography>\r\n                        </div>\r\n                        :\r\n                        <div className={classes.divCenter}>\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={handleDose1}\r\n                                >\r\n                                Cadastrar 1ª Dose\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    <Divider/>\r\n                    <Typography variant=\"h6\">2ª Dose</Typography>\r\n                    {dose2 ? \r\n                        <div>\r\n                            <Typography variant=\"subtitle1\">Data: {new Date(dose2[2]).toLocaleDateString()}</Typography>\r\n                            <Typography variant=\"subtitle1\">Grupo: {dose2[3]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Vacina: {dose2[4]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Lote: {dose2[5]}</Typography>\r\n                        </div>\r\n                        :\r\n                        <div className={classes.divCenter}>\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={handleDose2}\r\n                                >\r\n                                Cadastrar 2ª Dose\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    </div> : null}\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {body}\r\n                    </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VacinarPage;","import {Switch, Route} from \"react-router-dom\";\r\nimport LoginPage from './pages/LoginPage'\r\nimport SelecaoPage from './pages/SelecaoPage'\r\nimport ListaVacinadosPage from './pages/ListaVacinadosPage'\r\nimport VacinarPage from \"./pages/VacinarPage\";\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/'} component={LoginPage} exact />\r\n            <Route path={'/selecao'} component={SelecaoPage} />\r\n            <Route path={'/listavacinados'} component={ListaVacinadosPage} />\r\n            <Route path={'/vacinar'} component={VacinarPage} />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Routes} from './routes'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}