{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","pages/LoginPage.js","adapters/api-planilha.js","components/AppToolbar.js","pages/SelecaoPage.js","pages/ListaVacinadosPage.js","pages/VacinarPage.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","buttonProgress","color","position","top","left","marginLeft","wrapper","LoginPage","classes","history","useHistory","React","useState","loading","setLoading","error","setError","useEffect","login","localStorage","getItem","token","push","AppBar","Toolbar","Typography","variant","className","title","Container","CssBaseline","noValidate","onSubmit","e","preventDefault","user","target","elements","value","password","params","URLSearchParams","append","fetch","method","redirect","body","response","json","console","log","success","setItem","message","catch","alert","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","helperText","Button","disabled","CircularProgress","size","flexGrow","AppToolbar","props","backButton","setBackButton","logoutButton","setLogoutButton","IconButton","edge","aria-label","onClick","goBack","ArrowBack","removeItem","ExitToApp","stepper","bottom","buttons","right","formControl","minWidth","buttonConfirmar","backdrop","zIndex","drawer","SelecaoPage","activeStep","setActiveStep","steps","grupo","setGrupo","vacina","setVacina","lote","setLote","grupos","setGrupos","vacinas","setVacinas","lotes","setLotes","stepSelects","handleChangeGrupo","event","handleChangeVacina","handleChangeLote","Backdrop","open","length","centerDiv","style","textAlign","step","FormControl","InputLabel","Select","labelId","onChange","map","grupoItem","MenuItem","vacinaItem","loteItem","getStepContent","prevStep","Stepper","index","Step","StepLabel","card","buttonDiv","buttonAdd","listDiv","paddingBottom","list","maxHeight","overflow","progress","ListaVacinadosPage","vacinados","setVacinados","state","vacinacoesPaciente","Divider","List","dense","vacinado","ListItem","button","divider","cpf","ListItemText","primary","secondary","replace","divCenter","tfCpf","pacienteDiv","paddingLeft","backgroundColor","palette","background","border","boxShadow","shadows","padding","VacinarPage","visibility","setVisibility","setCpf","nome","setNome","dn","setDn","sexo","setSexo","dose1","setDose1","dose2","setDose2","setLogin","time","Date","setOpen","modalDose","setModalDose","loadingModal","setLoadingModal","loginStorage","handleSearch","cpfFromList","paciente","handleOpen","handleClose","transform","toLocaleDateString","inputProps","maxLength","startIcon","Modal","onClose","aria-labelledby","aria-describedby","Routes","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12b669a0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getURL } from '../adapters/api-planilha';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    buttonProgress: {\r\n        color: 'blue',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState();\r\n\r\n    useEffect(() => {\r\n        const login = localStorage.getItem('login');\r\n        const token = localStorage.getItem('token');\r\n        if(login && token){\r\n            history.push('/selecao')\r\n        }\r\n    }, []);\r\n\r\n    function doLogin(e) {\r\n        e.preventDefault();\r\n        const user = e.target.elements.user.value;\r\n        const password = e.target.elements.password.value;\r\n        setError(null);\r\n        if(!loading) {\r\n            setLoading(true);\r\n            const params = new URLSearchParams();\r\n            params.append('login', user);\r\n            params.append('password', password);\r\n            params.append('type', 'doLogin');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                setLoading(false);\r\n                if(json.success){\r\n                    localStorage.setItem('login', user);\r\n                    localStorage.setItem('token', json.token);\r\n                    history.push('/selecao');\r\n                } else {\r\n                    setError(json.message);\r\n                }\r\n            })).catch(e => {\r\n                console.log(e);\r\n                setLoading(false);\r\n                alert('Não foi possível conectar ao servidor.')\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Vacinas\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                <CssBaseline />\r\n\r\n                <form className={classes.form} noValidate onSubmit={doLogin}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"Usuário\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                        error={!!error}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        error={!!error} helperText={error ? error: \"\"}\r\n                    />\r\n                    <div className={classes.wrapper}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            Entrar\r\n                        </Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","\r\nexport const getGrupos = () => {\r\n    return ['Trabalhadores de Saúde', 'Pessoas de 80 anos ou mais']\r\n}\r\n\r\nexport const getVacinas = () => {\r\n    return ['Coronavac', 'Pfizer', 'Oxford']\r\n}\r\n\r\nexport const getLotes = () => {\r\n    return ['45604654', '70546Z5646', '4654546']\r\n}\r\n\r\nexport const getVacinados = () => {\r\n    return [\r\n        {nome: 'João da Silva', cpf: '12312512412'},\r\n        {nome: 'Pedro dos Santos', cpf:'64525625655'},\r\n        {nome: 'Maria da Silva', cpf: '21412421487'}\r\n    ]\r\n}\r\n\r\nexport const getCpf = () => {\r\n    return []\r\n}\r\n\r\nexport const getURL = () => {\r\n    return 'https://script.google.com/macros/s/AKfycbxkQf1wEUKHZoB6kbYA_YPHOioUhUAPiW2ctj83G83iNhuvTT9eig_-R38xZkui8Fk_OA/exec'\r\n}","import { makeStyles } from \"@material-ui/core\";\r\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { ArrowBack, ExitToApp } from '@material-ui/icons';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  }));\r\n\r\nfunction AppToolbar(props) {\r\n\r\n    const classes = useStyles();\r\n    const [backButton, setBackButton] = useState(false);\r\n    const [logoutButton, setLogoutButton] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(props.backButton){\r\n            setBackButton(true);\r\n        }\r\n        if(props.logoutButton){\r\n            setLogoutButton(true);\r\n        }\r\n    }, [props.backButton, props.logoutButton])\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                {backButton ? \r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"voltar\" onClick={handleBack}>\r\n                        <ArrowBack />\r\n                    </IconButton> : null}\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Vacinas\r\n                </Typography>\r\n                \r\n                {logoutButton ? \r\n                    <div>\r\n                        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"sair\" onClick={handleLogout}>\r\n                            <ExitToApp />\r\n                        </IconButton> \r\n                    </div>: null}\r\n                    \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default AppToolbar;","import React, {useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getURL } from '../adapters/api-planilha';\r\nimport { Backdrop, CircularProgress } from '@material-ui/core';\r\nimport AppToolbar from '../components/AppToolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepper: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%'\r\n  },\r\n  buttons: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    right: 20\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  buttonConfirmar: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    left: '50%',\r\n    width: 120,\r\n    'margin-left': '-60px'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction SelecaoPage(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = ['Selecione o grupo', 'Selecione a vacina', 'Selecione o lote'];\r\n  const [grupo, setGrupo] = React.useState('');\r\n  const [vacina, setVacina] = React.useState('');\r\n  const [lote, setLote] = React.useState('');\r\n  const [grupos, setGrupos] = React.useState([]);\r\n  const [vacinas, setVacinas] = React.useState([]);\r\n  const [lotes, setLotes] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const stepSelects = [grupo, vacina, lote];\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n      setLoading(true);\r\n      const params = new URLSearchParams();\r\n      params.append('token', token);\r\n      params.append('type', 'getGrupoVacinaLote')\r\n      fetch(getURL(), {\r\n        method: 'post',\r\n        redirect: 'follow',\r\n        body: params\r\n      }).then((response) => response.json().then((json) => {\r\n          console.log(json);\r\n          setLoading(false);\r\n          if(json.success){\r\n              setGrupos(json.grupos);\r\n              setVacinas(json.vacinas);\r\n              setLotes(json.lotes);\r\n          } else {\r\n              localStorage.removeItem('token');\r\n              history.push('/');\r\n          }\r\n      })).catch(e => {\r\n          console.log(e);\r\n          setLoading(false);\r\n          alert('Não foi possível conectar ao servidor.')\r\n      });\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  }, [])\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep)=>prevStep+1);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep)=>prevStep+-1);\r\n  }\r\n\r\n  const handleChangeGrupo = (event) => {\r\n    setGrupo(event.target.value);\r\n  };\r\n\r\n  const handleChangeVacina = (event) => {\r\n    setVacina(event.target.value);\r\n  };\r\n\r\n  const handleChangeLote = (event) => {\r\n    setLote(event.target.value);\r\n  };\r\n\r\n  const handleConfirmation = (event) => {\r\n    history.push('/listavacinados', {grupo: grupo, vacina: vacina, lote: lote});\r\n\r\n  }\r\n\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"grupo-select-label\">Grupo</InputLabel>\r\n              <Select\r\n                labelId=\"grupo-select-label\"\r\n                id=\"grupo-select\"\r\n                value={grupo}\r\n                onChange={handleChangeGrupo}\r\n              >\r\n                {grupos.map((grupoItem)=>{\r\n                  return <MenuItem key={grupoItem} value={grupoItem}>{grupoItem}</MenuItem>\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n        );\r\n      case 1:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"vacina-select-label\">Vacina</InputLabel>\r\n          <Select\r\n            labelId=\"vacina-select-label\"\r\n            id=\"vacina-select\"\r\n            value={vacina}\r\n            onChange={handleChangeVacina}\r\n          >\r\n            {vacinas.map((vacinaItem)=>{\r\n              return <MenuItem key={vacinaItem} value={vacinaItem}>{vacinaItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      case 2:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"lote-select-label\">Lote</InputLabel>\r\n          <Select\r\n            labelId=\"lote-select-label\"\r\n            id=\"lote-select\"\r\n            value={lote}\r\n            onChange={handleChangeLote}\r\n          >\r\n            {lotes.map((loteItem)=>{\r\n              return <MenuItem key={loteItem} value={loteItem}>{loteItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n    <CssBaseline />\r\n          <AppToolbar logoutButton/>\r\n\r\n        {activeStep === steps.length ? (\r\n          <Container>\r\n            <p>Grupo: {grupo}</p>\r\n            <p>Vacina: {vacina}</p>\r\n            <p>Lote: {lote}</p>\r\n            <div className={classes.centerDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonConfirmar}\r\n                onClick={handleConfirmation}\r\n              >Confirmar</Button>\r\n            </div>\r\n          </Container>\r\n        ) : (\r\n          <div>\r\n            <div style={{textAlign: \"center\"}}>{getStepContent(activeStep)}</div>\r\n            <div className={classes.buttons}>\r\n              <Button disabled={activeStep === 0} onClick={handleBack}>\r\n                Voltar\r\n              </Button>\r\n              <Button\r\n                disabled={stepSelects[activeStep]===''}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n              >\r\n                Próximo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      \r\n      <div className={classes.stepper}>\r\n        <Stepper activeStep={activeStep}>\r\n          {steps.map((label, index) => {\r\n            const stepProps = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelecaoPage;","import Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, CircularProgress, Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppToolbar from '../components/AppToolbar';\r\nimport { getURL } from '../adapters/api-planilha';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: '20px'\r\n    },\r\n    buttonDiv: {\r\n        position: 'fixed',\r\n        bottom: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    buttonAdd: {\r\n        width: '100px'\r\n    },\r\n    listDiv: {\r\n        paddingBottom: '40px'\r\n    },\r\n    list: {\r\n        maxHeight: '80vh', \r\n        overflow: 'auto'\r\n    },   \r\n    progress: {\r\n        color: 'blue',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nfunction ListaVacinadosPage(props) {\r\n    const classes = useStyles();\r\n    const [grupo, setGrupo] = useState();\r\n    const [vacina, setVacina] = useState();\r\n    const [lote, setLote] = useState();\r\n    const [vacinados, setVacinados] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            if(props.location.state){\r\n                setLoading(true);\r\n                setGrupo(props.location.state.grupo);\r\n                setVacina(props.location.state.vacina);\r\n                setLote(props.location.state.lote);\r\n                const params = new URLSearchParams();\r\n                params.append('token', token);\r\n                params.append('grupo', props.location.state.grupo);\r\n                params.append('vacina', props.location.state.vacina);\r\n                params.append('lote', props.location.state.lote);\r\n                params.append('type', 'getListGrupoVacinaLote')\r\n                fetch(getURL(), {\r\n                    method: 'post',\r\n                    redirect: 'follow',\r\n                    body: params\r\n                }).then((response) => response.json().then((json) => {\r\n                    console.log(json);\r\n                    setLoading(false);\r\n                    if(json.success){\r\n                        setVacinados(json.vacinacoesPaciente);\r\n                    } else {\r\n                        localStorage.removeItem('token');\r\n                        history.push('/');\r\n                    }\r\n                })).catch(e => {\r\n                    console.log(e);\r\n                    setLoading(false);\r\n                    alert('Não foi possível conectar ao servidor.')\r\n                });\r\n\r\n            } else {\r\n                history.push('/selecao');\r\n            }\r\n\r\n            \r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const handleAdd = () => {\r\n        history.push('/vacinar', {grupo: grupo, vacina: vacina, lote: lote})\r\n    };\r\n\r\n    const handleItemClick = (cpf) => {\r\n        history.push('/vacinar', {grupo: grupo, vacina: vacina, lote: lote, cpf: cpf})\r\n    }\r\n\r\n    const cpfMask = value => {\r\n        return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n          .replace(/(-\\d{2})\\d+?$/, '$1')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppToolbar backButton logoutButton/>\r\n                <div>\r\n                    <Typography variant=\"h6\">Grupo: {grupo}</Typography>\r\n                    <Typography variant=\"h6\">Vacina: {vacina}</Typography>\r\n                    <Typography variant=\"h6\">Lote: {lote}</Typography>\r\n                </div>        \r\n                <Divider variant=\"middle\" />\r\n                <div className={classes.listDiv}>\r\n                    <Typography variant=\"h6\">Registros de vacinaçao</Typography>\r\n                    <List dense className={classes.list} >\r\n                        {vacinados.map((vacinado) => {\r\n                            return (\r\n                                <ListItem key={vacinado[7]} button divider onClick={() => handleItemClick(vacinado[7])}>\r\n                                    <ListItemText\r\n                                        primary={vacinado[8]}\r\n                                        secondary={'CPF: ' + cpfMask(vacinado[7])}\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                        \r\n                    </List>\r\n                    {loading && <CircularProgress size={24} className={classes.progress} />}\r\n                </div>\r\n                <div className={classes.buttonDiv}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonAdd}\r\n                        onClick={handleAdd}\r\n                        >Adicionar\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaVacinadosPage;","import Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, CircularProgress, Divider,Modal, TextField } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { getURL } from '../adapters/api-planilha';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from 'react-router';\r\nimport AppToolbar from '../components/AppToolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divCenter: {\r\n        width: '100%',\r\n        textAlign: 'center'\r\n    },\r\n    tfCpf: {\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        marginTop: '20px'\r\n    },\r\n    pacienteDiv: {\r\n        paddingLeft: '20px'\r\n    },\r\n    buttonProgress: {\r\n        color: 'blue',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n\r\n      },\r\n}));\r\n\r\nfunction VacinarPage(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [visibility, setVisibility] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [cpf, setCpf] = React.useState();\r\n    const [nome, setNome] = React.useState();\r\n    const [dn, setDn] = React.useState();\r\n    const [sexo, setSexo] = React.useState();\r\n    const [dose1, setDose1] = React.useState();\r\n    const [dose2, setDose2] = React.useState();\r\n    const [grupo, setGrupo] = React.useState();\r\n    const [vacina, setVacina] = React.useState();\r\n    const [lote, setLote] = React.useState();\r\n    const [login, setLogin] = React.useState();\r\n    const time = new Date();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [modalDose, setModalDose] = React.useState('');\r\n    const [loadingModal, setLoadingModal] = React.useState(false);\r\n    const styles = { \r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    };\r\n\r\n    useEffect(()=> {\r\n        const token = localStorage.getItem('token');\r\n        const loginStorage = localStorage.getItem('login');\r\n        if(token && loginStorage){\r\n            setLogin(loginStorage);\r\n            if(props.location.state){\r\n                setGrupo(props.location.state.grupo);\r\n                setVacina(props.location.state.vacina);\r\n                setLote(props.location.state.lote);\r\n                if(props.location.state.cpf){\r\n                    handleSearch(null, props.location.state.cpf);\r\n                }\r\n            } else {\r\n                history.push('/selecao')\r\n            }\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n\r\n    const handleSearch = (e, cpfFromList=null) => {\r\n        let cpf;\r\n        if(cpfFromList){\r\n            cpf = cpfFromList;\r\n        } else {\r\n            e.preventDefault();\r\n            cpf = e.target.elements.cpf.value.replace(/\\D/g, '');\r\n        }\r\n        if(!loading) {\r\n            setLoading(true);\r\n            setError(false);\r\n            const params = new URLSearchParams();\r\n            params.append('cpf', cpf);\r\n            params.append('type', 'getPaciente');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                if(json.success){\r\n                    setCpf(json.paciente[0]);\r\n                    setNome(json.paciente[1]);\r\n                    setDn(json.paciente[2]);\r\n                    setSexo(json.paciente[3]);\r\n                    setDose1(json.dose1[0]);\r\n                    setDose2(json.dose2[0]);\r\n                    setVisibility(true);\r\n                }else{\r\n                    setError(true);\r\n                }\r\n                setLoading(false);\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    const handleCadastro = () => {\r\n        if(!loadingModal){\r\n            setLoadingModal(true);\r\n            const params = new URLSearchParams();\r\n            params.append('login', login);\r\n            params.append('cpf', cpf);\r\n            params.append('time', time);\r\n            params.append('grupo', grupo);\r\n            params.append('vacina', vacina);\r\n            params.append('lote', lote);\r\n            params.append('dose', modalDose);\r\n            params.append('type', 'setVacinacao');\r\n            fetch(getURL(), {\r\n                method: 'post',\r\n                redirect: 'follow',\r\n                body: params\r\n            }).then((response) => response.json().then((json) => {\r\n                console.log(json);\r\n                if(json.success){\r\n                    if(modalDose===1) {\r\n                        setDose1([login, cpf, time, grupo, vacina, lote]);\r\n                    } else if(modalDose === 2) {\r\n                        setDose2([login, cpf, time, grupo, vacina, lote]);\r\n                    }\r\n                    handleClose();\r\n                }else{\r\n                    alert('Erro no cadastro')\r\n                }\r\n                setLoadingModal(false);\r\n                setLoading(false);\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleDose1 = () => {\r\n        setModalDose(1);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleDose2 = () => {\r\n        setModalDose(2);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    const cpfMask = value => {\r\n        return value\r\n          .replace(/\\D/g, '')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n          .replace(/(-\\d{2})\\d+?$/, '$1')\r\n    }\r\n\r\n    const handleOnChange = e => {\r\n        e.target.value = cpfMask(e.target.value);\r\n    }\r\n\r\n    const body = (\r\n        <div style={styles} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Cadastrar {modalDose}ª dose</h2>\r\n          <div id=\"simple-modal-description\">\r\n            <p>Grupo: {grupo}</p>\r\n            <p>Vacina: {vacina}</p>\r\n            <p>Lote: {lote}</p>\r\n            <p>Data: {time.toLocaleDateString()}</p>\r\n            <div className={classes.divCenter}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={loadingModal}\r\n                        onClick={handleCadastro}>Confirmar</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppToolbar backButton logoutButton/>\r\n                <div className={classes.divCenter}>\r\n                    <Typography variant=\"h6\">Buscar paciente</Typography>\r\n                    <form onSubmit={handleSearch}>\r\n                        <TextField className={classes.tfCpf} id=\"cpf\" label=\"CPF\" name=\"cpf\" inputProps={{ maxLength: 14 }} error={error} helperText={error ? \"CPF não encontrado.\": \"\"} onChange={handleOnChange} />\r\n                        <div className={classes.wrapper}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SearchIcon />}\r\n                            disabled={loading}\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {visibility ? <div className={classes.pacienteDiv}>\r\n                    <Typography variant=\"subtitle1\">Nome: {nome}</Typography>\r\n                    <Typography variant=\"subtitle1\">Data de nascimento: {dn}</Typography>\r\n                    <Typography variant=\"subtitle1\">Sexo: {sexo}</Typography>\r\n                    <Divider/>\r\n                    <Typography variant=\"h6\">1ª Dose</Typography>\r\n                    {dose1 ? \r\n                        <div>\r\n                            <Typography variant=\"subtitle1\">Data: {new Date(dose1[2]).toLocaleDateString()}</Typography>\r\n                            <Typography variant=\"subtitle1\">Grupo: {dose1[3]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Vacina: {dose1[4]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Lote: {dose1[5]}</Typography>\r\n                        </div>\r\n                        :\r\n                        <div className={classes.divCenter}>\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={handleDose1}\r\n                                >\r\n                                Cadastrar 1ª Dose\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    <Divider/>\r\n                    <Typography variant=\"h6\">2ª Dose</Typography>\r\n                    {dose2 ? \r\n                        <div>\r\n                            <Typography variant=\"subtitle1\">Data: {new Date(dose2[2]).toLocaleDateString()}</Typography>\r\n                            <Typography variant=\"subtitle1\">Grupo: {dose2[3]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Vacina: {dose2[4]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Lote: {dose2[5]}</Typography>\r\n                        </div>\r\n                        :\r\n                        <div className={classes.divCenter}>\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={handleDose2}\r\n                                >\r\n                                Cadastrar 2ª Dose\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    </div> : null}\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {body}\r\n                    </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VacinarPage;","import {Switch, Route} from \"react-router-dom\";\r\nimport LoginPage from './pages/LoginPage'\r\nimport SelecaoPage from './pages/SelecaoPage'\r\nimport ListaVacinadosPage from './pages/ListaVacinadosPage'\r\nimport VacinarPage from \"./pages/VacinarPage\";\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/'} component={LoginPage} exact />\r\n            <Route path={'/selecao'} component={SelecaoPage} />\r\n            <Route path={'/listavacinados'} component={ListaVacinadosPage} />\r\n            <Route path={'/vacinar'} component={VacinarPage} />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Routes} from './routes'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}